#
# Cross Platform Makefile
# Compatible with MSYS2/MINGW, Ubuntu 14.04.1 and Mac OS X
#
# You will need SDL2 (http://www.libsdl.org):
# Linux:
#   apt-get install libsdl2-dev
# Mac OS X:
#   brew install sdl2
# MSYS2:
#   pacman -S mingw-w64-i686-SDL2
#

#CXX = g++
#CXX = clang++

EXE = main
SOURCES = main.cpp

IMGUI_DIR = imgui
SOURCES += $(IMGUI_DIR)/imgui.cpp $(IMGUI_DIR)/imgui_demo.cpp $(IMGUI_DIR)/imgui_draw.cpp $(IMGUI_DIR)/imgui_tables.cpp $(IMGUI_DIR)/imgui_widgets.cpp
SOURCES += $(IMGUI_DIR)/backends/imgui_impl_sdl.cpp $(IMGUI_DIR)/backends/imgui_impl_opengl3.cpp

JSONCPP = src/jsoncpp
SOURCES += $(JSONCPP)/dist/jsoncpp.cpp

OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))
UNAME_S := $(shell uname -s)
LINUX_GL_LIBS = -lGL

CXXFLAGS = -I src/classes
CXXFLAGS = -std=c++11 -I$(IMGUI_DIR) -I$(IMGUI_DIR)/backends
CXXFLAGS += -g -Wall -Wformat
LIBS =

##---------------------------------------------------------------------
## OPENGL ES
##---------------------------------------------------------------------

## This assumes a GL ES library available in the system, e.g. libGLESv2.so
# CXXFLAGS += -DIMGUI_IMPL_OPENGL_ES2
# LINUX_GL_LIBS = -lGLESv2
## If you're on a Raspberry Pi and want to use the legacy drivers,
## use the following instead:
# LINUX_GL_LIBS = -L/opt/vc/lib -lbrcmGLESv2

##---------------------------------------------------------------------
## BUILD FLAGS PER PLATFORM
##---------------------------------------------------------------------

ifeq ($(UNAME_S), Linux) #LINUX
	ECHO_MESSAGE = "Linux"
	LIBS += $(LINUX_GL_LIBS) -ldl `sdl2-config --libs`

	CXXFLAGS += `sdl2-config --cflags`
	CFLAGS = $(CXXFLAGS)
endif

ifeq ($(UNAME_S), Darwin) #APPLE
	ECHO_MESSAGE = "Mac OS X"
	LIBS += -framework OpenGL -framework Cocoa -framework IOKit -framework CoreVideo `sdl2-config --libs`
	LIBS += -L/usr/local/lib -L/opt/local/lib

	CXXFLAGS += `sdl2-config --cflags`
	CXXFLAGS += -I/usr/local/include -I/opt/local/include
	CFLAGS = $(CXXFLAGS)
endif

ifeq ($(OS), Windows_NT)
    ECHO_MESSAGE = "MinGW"
    LIBS += -lgdi32 -lopengl32 -limm32 `pkg-config --static --libs sdl2`

    CXXFLAGS += `pkg-config --cflags sdl2`
    CFLAGS = $(CXXFLAGS)
endif

##---------------------------------------------------------------------
## BUILD RULES
##---------------------------------------------------------------------

%.o:%.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<

%.o:$(IMGUI_DIR)/%.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<

%.o:$(IMGUI_DIR)/backends/%.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<

all: $(EXE)
	@echo Build complete for $(ECHO_MESSAGE)

$(EXE): $(OBJS)
	$(CXX) -o $@ $^ $(CXXFLAGS) $(LIBS)

clean:
	rm -f $(EXE) $(OBJS)


all:

windows: #! WORKING WINDOWS COMMAND
	g++ -I src/ -I src/SDL/include -I src/classes -I src/jsoncpp/include -I src/imgui -I src/imgui/backends -Lsrc/SDL/lib -mwindows -o main main.cpp src/imgui/imgui.cpp src/imgui/imgui_demo.cpp src/imgui/imgui_draw.cpp src/imgui/imgui_tables.cpp src/imgui/imgui_widgets.cpp src/imgui/backends/imgui_impl_sdl.cpp src/imgui/backends/imgui_impl_opengl3.cpp src/jsoncpp/dist/jsoncpp.cpp -lgdi32 -lopengl32 -limm32 -lmingw32 -lSDL2main -lSDL2 

windows: #* DETAILED COMMAND
	g++
	# -I src/ -I src/SDL/include -I src/classes -I src/jsoncpp/include -I src/imgui -I src/imgui/backends 
	# -L src/SDL/lib
	-mwindows
	-o main
	main.cpp
	src/imgui/imgui.cpp 
	src/imgui/imgui_demo.cpp 
	src/imgui/imgui_draw.cpp 
	src/imgui/imgui_tables.cpp 
	src/imgui/imgui_widgets.cpp 
	src/imgui/backends/imgui_impl_sdl.cpp 
	src/imgui/backends/imgui_impl_opengl3.cpp 
	src/jsoncpp/dist/jsoncpp.cpp
	-lgdi32 -lopengl32 -limm32 -lmingw32 -lSDL2main -lSDL2 

macOS:
	clang++ -I /Library/Frameworks/SDL2.framework/Versions/A/Headers -I src/classes -I src/jsoncpp/include -L src/lib -o main main.cpp src/jsoncpp/dist/jsoncpp.cpp -SDL2

clean:
	rm -f main


windows:
	g++ -I -I src/classes src/SDL/include -I src/jsoncpp/include -L src/SDL/lib -o main main.cpp src/jsoncpp/dist/jsoncpp.cpp -lmingw32 -lSDL2main -lSDL2

macOS:
	clang++ -I /Library/Frameworks/SDL2.framework/Versions/A/Headers -I src/classes -I src/jsoncpp/include -L src/lib -o main main.cpp src/jsoncpp/dist/jsoncpp.cpp -SDL2

clean:
	rm -f main